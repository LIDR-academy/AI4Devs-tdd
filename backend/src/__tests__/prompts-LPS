#PROMPTS

##CURSOR + Claude-3.7-Sonnet

###Prompt 1:
````
Eres un experto en javascript. Analiza este proyecto. Dada la siguiente historia de usuario:

# Añadir Candidato al Sistema

## Como reclutador, Quiero tener la capacidad de añadir candidatos al sistema ATS, Para que pueda gestionar sus datos y procesos de selección de manera eficiente.

### Criterios de Aceptación:

1. **Accesibilidad de la función:** Debe haber un botón o enlace claramente visible para añadir un nuevo candidato desde la página principal del dashboard del reclutador.

2. **Formulario de ingreso de datos:** Al seleccionar la opción de añadir candidato, se debe presentar un formulario que incluya los campos necesarios para capturar la información del candidato como nombre, apellido, correo electrónico, teléfono, dirección, educación y experiencia laboral.

3. **Validación de datos:** El formulario debe validar los datos ingresados para asegurar que son completos y correctos. Por ejemplo, el correo electrónico debe tener un formato válido y los campos obligatorios no deben estar vacíos.

4. **Carga de documentos:** El reclutador debe tener la opción de cargar el CV del candidato en formato PDF o DOCX.

5. **Confirmación de añadido:** Una vez completado el formulario y enviada la información, debe aparecer un mensaje de confirmación indicando que el candidato ha sido añadido exitosamente al sistema.

6. **Errores y manejo de excepciones:** En caso de error (por ejemplo, fallo en la conexión con el servidor), el sistema debe mostrar un mensaje adecuado al usuario para informarle del problema.

7. **Accesibilidad y compatibilidad:** La funcionalidad debe ser accesible y compatible con diferentes dispositivos y navegadores web.

1. escribe test unitarios que garanticen que los criterios de aceptación se cumplen. 
2. Hay dos familias princpales de test: 
   a) recepción de los datos del formulario
   b) guardado en la base de datos
Resalta un test como más importante que los demás para cada una de ellas
3. Utiliza buenas prácticas de testing
4. Añade los casos limite que consideres
5. Añade comentarios para aclrar a qué criterio de aceptación se refiere cada test
6. Si hace falta modificar algo de la base de datos mejor tener un Mock , para no alterar los datos @https://www.prisma.io/blog/testing-series-1-8eRB5p0Y8o#mock-prisma-client 

No hagas nada aún. Primero dime qué vas a hacer
```

###Prompt 2:
````
For the code present, we get this error:
```
'this' implicitly has type 'any' because it does not have a type annotation.
```
How can I resolve this? If you propose a fix, please make it concise.
````

###Prompt 3:
````
/test
````

###Prompt 4:
````
¿Es posible poner todos los test en un unico archivo y que se ejecuten bien? Quiero mantener todos los tests en el arch@tests-LPS, aunque no quiero borrar ningun archivo de los que ya hay
````

<!-- Vuelvo al punto anterior, porque me ha creado un archivo resumen, pero no me ha ejecutado los test. -->

###Prompt 5:
````
¿Es posible poner todos los test en un unico archivo y que se ejecuten bien? Quiero mantener todos los tests en el archivo @tests-LPS.ts  , si hace falta se pueden borrar archivos de test que ya hay, para que el nuevo archivo que contiene todos los test funcione al ejecutar los tests
````